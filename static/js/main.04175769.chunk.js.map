{"version":3,"sources":["components/MovieCard/MovieCard.js","components/MoviesList/MoviesList.js","api/api.js","components/FindMovie/FindMovie.js","App.js","index.js"],"names":["MovieCard","title","description","imgUrl","imdbUrl","className","src","alt","href","MoviesList","movies","map","movie","key","imdbId","request","fetch","then","response","json","FindMovie","addMovieToTheList","useState","value","setValue","movieFound","setMovieFound","showMessage","setShowMessage","a","resultMovie","createMovie","Title","Plot","Poster","imdbID","undefined","newMovie","htmlFor","type","id","placeholder","onChange","event","target","onClick","App","state","data","find","film","setState","this","Component","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.04175769.chunk.js","sourcesContent":["import React from 'react';\nimport './MovieCard.scss';\nimport PropTypes from 'prop-types';\n\nexport const MovieCard = ({\n  title,\n  description = '',\n  imgUrl,\n  imdbUrl,\n}) => (\n  <div className=\"card\">\n    <div className=\"card-image\">\n      <figure className=\"image is-4by3\">\n        <img\n          src={imgUrl}\n          alt=\"Film logo\"\n        />\n      </figure>\n    </div>\n    <div className=\"card-content\">\n      <div className=\"media\">\n        <div className=\"media-left\">\n          <figure className=\"image is-48x48\">\n            <img\n              src=\"images/imdb-logo.jpeg\"\n              alt=\"imdb\"\n            />\n          </figure>\n        </div>\n        <div className=\"media-content\">\n          <p className=\"title is-8\">{title}</p>\n        </div>\n      </div>\n\n      <div className=\"content\">\n        {description}\n        <br />\n        <a href={imdbUrl}>IMDB</a>\n      </div>\n    </div>\n  </div>\n);\n\nMovieCard.propTypes = {\n  title: PropTypes.string.isRequired,\n  description: PropTypes.string.isRequired,\n  imgUrl: PropTypes.string.isRequired,\n  imdbUrl: PropTypes.string.isRequired,\n};\n","import React from 'react';\n\nimport './MoviesList.scss';\nimport PropTypes from 'prop-types';\nimport { MovieCard } from '../MovieCard';\n\nexport const MoviesList = ({\n  movies = [],\n}) => (\n  <div className=\"movies\">\n    {movies.map(movie => (\n      <MovieCard key={movie.imdbId} {...movie} />\n    ))}\n  </div>\n);\n\nMoviesList.propTypes = {\n  movies: PropTypes.arrayOf(\n    PropTypes.shape({\n      imdbId: PropTypes.string.isRequired,\n    }).isRequired,\n  ).isRequired,\n};\n","const BASE_URL = 'https://www.omdbapi.com/?apikey=';\nconst key = '7a033ea5';\n\nexport const request = title => fetch(`${BASE_URL}${key}&t=${title}`)\n  .then(response => response.json());\n","import React, { useState } from 'react';\nimport './FindMovie.scss';\nimport PropTypes from 'prop-types';\nimport { request } from '../../api';\nimport { MovieCard } from '../MovieCard';\n\nexport const FindMovie = ({ addMovieToTheList }) => {\n  const [value, setValue] = useState('');\n  const [movieFound, setMovieFound] = useState(false);\n  const [showMessage, setShowMessage] = useState(false);\n\n  async function getMovie() {\n    const resultMovie = await request(value);\n\n    createMovie(resultMovie);\n  }\n\n  const createMovie = ({ Title, Plot, Poster, imdbID }) => {\n    if (Title === undefined) {\n      setMovieFound(null);\n      setShowMessage(true);\n\n      return;\n    }\n\n    const newMovie = {\n      title: Title,\n      description: Plot,\n      imgUrl: Poster,\n      imdbUrl: `https://www.imdb.com/title/${imdbID}`,\n      imdbId: imdbID,\n    };\n\n    setMovieFound(newMovie);\n  };\n\n  return (\n\n    <>\n      <form className=\"find-movie\">\n        <div className=\"field\">\n          <label className=\"label\" htmlFor=\"movie-title\">\n            Movie title\n          </label>\n\n          <div className=\"control\">\n            <input\n              type=\"text\"\n              id=\"movie-title\"\n              placeholder=\"Enter a title to search\"\n              className={\n                !showMessage\n                  ? 'input'\n                  : 'input is-danger'\n              }\n              value={value}\n              onChange={((event) => {\n                setValue(event.target.value);\n                setShowMessage(false);\n              })}\n            />\n          </div>\n          {!showMessage\n            ? null\n            : (\n              <p className=\"help is-danger\">\n                Can&apos;t find a movie with such a title\n              </p>\n            )}\n        </div>\n\n        <div className=\"field is-grouped\">\n          <div className=\"control\">\n            <button\n              type=\"button\"\n              className=\"button is-light\"\n              onClick={getMovie}\n            >\n              Find a movie\n            </button>\n          </div>\n\n          <div className=\"control\">\n            <button\n              type=\"button\"\n              className=\"button is-primary\"\n              onClick={(() => {\n                addMovieToTheList(movieFound);\n                setValue('');\n              })}\n            >\n              Add to the list\n            </button>\n          </div>\n        </div>\n      </form>\n\n      <div className=\"container\">\n        <h2 className=\"title\">Preview</h2>\n        {movieFound\n          ? <MovieCard {...movieFound} />\n          : null}\n      </div>\n    </>\n  );\n};\n\nFindMovie.propTypes = {\n  addMovieToTheList: PropTypes.func.isRequired,\n};\n","import React, { Component } from 'react';\nimport './App.scss';\nimport { MoviesList } from './components/MoviesList';\nimport { FindMovie } from './components/FindMovie';\nimport data from './api/movies.json';\n\nexport class App extends Component {\n  state = {\n    movies: data,\n  };\n\n  addMovieToTheList = (movie) => {\n    if (movie !== null) {\n      if (!this.state.movies.find(film => film.imdbId === movie.imdbId)) {\n        this.setState(state => ({\n          movies: [...state.movies, movie],\n        }));\n      }\n    }\n  }\n\n  render() {\n    const { movies } = this.state;\n\n    return (\n      <div className=\"page\">\n        <div className=\"page-content\">\n          <MoviesList movies={movies} />\n        </div>\n        <div className=\"sidebar\">\n          <FindMovie addMovieToTheList={this.addMovieToTheList} />\n        </div>\n      </div>\n    );\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'bulma/css/bulma.css';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}